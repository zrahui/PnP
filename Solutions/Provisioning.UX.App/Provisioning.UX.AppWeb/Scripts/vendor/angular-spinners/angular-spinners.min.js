angular.module("angularSpinners", []).factory("spinnerService", function () { var r = {}; return { _register: function (n) { if (!n.hasOwnProperty("name")) throw new Error("Spinner must specify a name when registering with the spinner service."); if (r.hasOwnProperty(n.name)) throw new Error("A spinner with the name '" + n.name + "' has already been registered."); r[n.name] = n }, _unregister: function (n) { r.hasOwnProperty(n) && delete r[n] }, _unregisterGroup: function (n) { for (var e in r) r[e].group === n && delete r[e] }, _unregisterAll: function () { for (var n in r) delete r[n] }, show: function (n) { var e = r[n]; if (!e) throw new Error("No spinner named '" + n + "' is registered."); e.show() }, hide: function (n) { var e = r[n]; if (!e) throw new Error("No spinner named '" + n + "' is registered."); e.hide() }, showGroup: function (n) { var e = !1; for (var o in r) { var i = r[o]; i.group === n && (i.show(), e = !0) } if (!e) throw new Error("No spinners found with group '" + n + "'.") }, hideGroup: function (n) { var e = !1; for (var o in r) { var i = r[o]; i.group === n && (i.hide(), e = !0) } if (!e) throw new Error("No spinners found with group '" + n + "'.") }, showAll: function () { for (var n in r) r[n].show() }, hideAll: function () { for (var n in r) r[n].hide() } } }), angular.module("angularSpinners").directive("spinner", function () { return { restrict: "EA", replace: !0, transclude: !0, scope: { name: "@?", group: "@?", show: "=?", imgSrc: "@?", register: "@?", onLoaded: "&?", onShow: "&?", onHide: "&?" }, template: ['<span ng-show="show">', '  <img ng-show="imgSrc" ng-src="{{imgSrc}}" />', "  <span ng-transclude></span>", "</span>"].join(""), controller: ["$scope", "spinnerService", function (r, n) { r.hasOwnProperty("register") || (r.register = !0); var e = { name: r.name, group: r.group, show: function () { r.show = !0 }, hide: function () { r.show = !1 }, toggle: function () { r.show = !r.show } }; r.register === !0 && n._register(e), (r.onShow || r.onHide) && r.$watch("show", function (o) { o && r.onShow ? r.onShow({ spinnerService: n, spinnerApi: e }) : !o && r.onHide && r.onHide({ spinnerService: n, spinnerApi: e }) }), r.onLoaded && r.onLoaded({ spinnerService: n, spinnerApi: e }) }] } });